/*
 *	@File	DevelopMemo.txt
 *	@Brief	開発用メモ。
 *	@Date	2023-10-14
 *  @Author NakamuraRyo
 */

 『実装済み』
 〇SystemManager/FactoryManagerのアクセスを簡単に
 　　使用したデザインパターン：Facadeパターン
 〇StepTimer/DeviceResourcesを単一オブジェクトに
 　　使用したデザインパターン：Singletonパターン
 〇ModelFactory/ShaderFactoryの生産工場
 　　使用したデザインパターン：Factoryパターン
 〇MementoMap/EditLogでUndoRedo機能で取り消し可能に
 　　使用したデザインパターン：Mementoパターン

 〇フェードインフェードアウトをシェーダーに変更
 　　ルール画像変更でフェードが変化


【実装すること】

・プレイヤークラスの部品分け(Compositeパターン)

・セッターを使わずにコンストラクタで渡せるものは渡す（主にシーン）

・UIの継承とCreate関数の引数を変更（追加でFullscreensizeを追加）

・タイトル、セレクトの各カメラクラスを作る

・各シーンのスカイドームクラスを作る（移す）

・ボタンクラスに分ける

・プレイヤーのアニメーションをJsonで管理する

・スコアランキングを作成
	SelectScene(ハイスコアをHiScore.jsonに読み書き)

