/*
 *	@File	DevelopMemo.txt
 *	@Brief	開発用メモ。
 *	@Date	2023-10-14
 *  @Author NakamuraRyo
 */

 『実装済み』
 〇SystemManager/FactoryManagerのアクセスを簡単に
 　　使用したデザインパターン：Facadeパターン
 〇StepTimer/DeviceResourcesを単一オブジェクトに
 　　使用したデザインパターン：Singletonパターン
 〇ModelFactory/ShaderFactoryの生産工場
 　　使用したデザインパターン：Factoryパターン
 〇MementoMap/EditLogでUndoRedo機能で取り消し可能に
 　　使用したデザインパターン：Mementoパターン

 〇フェードインフェードアウトをシェーダーに変更
 　　ルール画像変更でフェードが変化


タスクーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

・クラスの細分化
タイトル,セレクト,リザルト　カメラ


・プレイヤークラスの部品分け(Compositeパターン)

・タイトル、セレクトの各カメラクラスを作る

・雲のシェーダーをステージ下に設置

・ブロッククラスのCreateの引数を消す（内部で作成）

・UIの継承とCreate関数の引数を変更（追加でFullscreensizeを追加）

・プレイヤーのアニメーションをJsonで管理する

・スコアランキングを作成
	SelectScene(ハイスコアをHiScore.jsonに読み書き)

・影を実装する

・最終タスク：メモリ量を削減する

